@use 'tokens';
@use 'utilities/mixins';

.homeHero {
  position: relative;
  z-index: tokens.$layer-1;
}

.heroIntroContent {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  background: tokens.$c-limeGreen-500;
  padding-block: clamp(tokens.$p-xl, 10vw, tokens.$p-3xl);
  @include mixins.sectionPadding(inline);
  position: relative;
  z-index: tokens.$layer-2;

  &::before {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    right: 100%;
    background-color: tokens.$c-limeGreen-500;
  }

  @media (min-width: tokens.$mq-800) {
    @include mixins.sectionPadding(block);
    padding-inline: 0;
    padding-bottom: 6rem;
  }

  @media (min-width: tokens.$mq-1400) {
    flex-direction: row;
  }

  h1 {
    color: tokens.$c-darkGreen-800;
  }
}

.heroImage {
  position: relative;
  z-index: tokens.$layer-1;
  height: clamp(20rem, 45vw, 35rem);
  overflow-y: clip;

  @media (max-width: tokens.$mq-1000) {
    width: 100vw;
    left: 50%;
    transform: translateX(-50%);
  }

  img {
    position: absolute;
    width: 100vw;
    height: 100%;
    max-height: 40rem;
    object-fit: cover;

    @media (min-width: tokens.$mq-800) {
      width: 93vw;
      max-width: calc(tokens.$maxWidth - 7rem);
      left: auto;
      right: 0;
    }
  }

  &::after {
    @include tokens.decoPlusSign;
    left: initial;
    top: initial;
    bottom: 0;
    right: 0;
    transform: translateX(45%) translateY(45%);
  }
}

.introCopy {
  @media (min-width: tokens.$mq-800) {
    padding-right: clamp(tokens.$p-l, 10vw, tokens.$p-3xl);
  }

  @media (min-width: tokens.$mq-1200) {
    margin-bottom: clamp(tokens.$p-l, 10vw, tokens.$p-3xl);
    span h1 {
      // width: 160%;
      position: relative;
      z-index: tokens.$layer-2;
    }
  }

  @media (min-width: tokens.$mq-1400) {
    padding-right: 0;
    span h1 {
      width: 160%;
    }
  }
}

.ctasRow {
  display: flex;
  width: 100%;
  margin: 0;
  list-style: none;
  position: relative;
  padding-block: tokens.$p-l;
  padding-inline: 0;

  @media (max-width: tokens.$mq-800) {
    justify-content: center;
  }

  &::before {
    content: '';
    display: block;
    width: clamp(15rem, 70vw, 40rem);
    height: 3rem;
    position: absolute;
    bottom: -30%;
    left: 0;
    background: url(../../../assets/hand-drawn-highlight.svg) no-repeat;
    background-size: 100% auto;
    pointer-events: none;
  }

  @media (min-width: tokens.$mq-1400) {
    align-self: flex-end;
    padding-right: 2rem;
    max-width: 28rem;
    flex-shrink: 0;
    padding-block: initial;

    &::before {
      width: 28rem;
      height: 16rem;
      top: -100%;
      bottom: auto;
      left: -3%;
      background: url(../../../assets/hand-drawn-circle.svg) no-repeat;
      background-size: 100% auto;
    }
  }

  li {
    border-left: 1px solid tokens.$c-limeGreen-300;

    &:last-child {
      border-right: 1px solid tokens.$c-limeGreen-300;
    }

    @media (min-width: tokens.$mq-1400) {
      border-right: 1px solid tokens.$c-limeGreen-300;

      &:first-child {
        border-left: none;
      }
      &:last-child {
        border-right: none;
      }
    }
  }

  a {
    display: flex;
    flex-direction: column;
    text-align: center;
    justify-content: center;
    line-height: 1;
    gap: tokens.$p-s;
    font-size: clamp(tokens.$fs-2xs, 1.5vw, tokens.$fs-xs);
    color: tokens.$c-copy;
    text-transform: uppercase;
    font-weight: 600;
    text-decoration: none;
    padding-inline: clamp(tokens.$p-m, 3vw, tokens.$p-xl);

    @media (min-width: tokens.$mq-1400) {
      padding-inline: clamp(tokens.$p-xs, 1vw, tokens.$p-s);
    }
  }

  svg {
    color: tokens.$c-white;
    font-size: clamp(tokens.$fs-xs, 7vw, tokens.$fs-xl);

    // @media(min-width: tokens.$mq-800){
    //   font-size: tokens.$fs-xl;
    // }
  }
}
